set_html_breaks(10),
paste0("1 null hypothesis was rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px"
)
} else {
div(
set_html_breaks(10),
paste0(sum(data$R), " null hypotheses were rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px;
.shiny-download-link{
width: 250px;
}
"
)
}
})
output$download <- downloadHandler(
filename = function() {
paste(file_string, Sys.Date(), ".csv", sep = "")
},
content = function(file) {
write_csv(algorithm_result[[1]], file)
}
)
}
return(count_server_function)
}
LONDcountServer <- make_count_server_function(LONDresult, "LOND-")
LONDcountServer
make_count_server_function <- function(algorithm_result, file_string) {
count_server_function <- function(input, output, session) {
ns <- session$ns
#toggle download button
observe({
toggle(id = "downloadbutton")
})
output$count <- renderUI({
data <- FUN(algorithm_result)[[1]]
if(sum(data$R) == 1) {
div(
set_html_breaks(10),
paste0("1 null hypothesis was rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px"
)
} else {
div(
set_html_breaks(10),
paste0(sum(data$R), " null hypotheses were rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px;
.shiny-download-link{
width: 250px;
}
"
)
}
})
output$download <- downloadHandler(
filename = function() {
paste(file_string, Sys.Date(), ".csv", sep = "")
},
content = function(file) {
write_csv(algorithm_result[[1]], file)
}
)
}
return(count_server_function)
}
LONDcountServer <- make_count_server_function(LONDresult, "LOND-")
LONDcountServer
make_count_server_function <- function(algorithm_result, file_string) {
count_server_function <- function(input, output, session) {
ns <- session$ns
#toggle download button
observe({
toggle(id = "downloadbutton")
})
output$count <- renderUI({
data <- rlang::eval(algorithm_result)[[1]]
if(sum(data$R) == 1) {
div(
set_html_breaks(10),
paste0("1 null hypothesis was rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px"
)
} else {
div(
set_html_breaks(10),
paste0(sum(data$R), " null hypotheses were rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px;
.shiny-download-link{
width: 250px;
}
"
)
}
})
output$download <- downloadHandler(
filename = function() {
paste(file_string, Sys.Date(), ".csv", sep = "")
},
content = function(file) {
write_csv(algorithm_result[[1]], file)
}
)
}
return(count_server_function)
}
LONDcountServer <- make_count_server_function(LONDresult, "LOND-")
LONDcountServer
make_count_server_function <- function(algorithm_result, file_string) {
count_server_function <- function(input, output, session, algorithm_result, file_string) {
ns <- session$ns
#toggle download button
observe({
toggle(id = "downloadbutton")
})
output$count <- renderUI({
data <- rlang::eval(algorithm_result)[[1]]
if(sum(data$R) == 1) {
div(
set_html_breaks(10),
paste0("1 null hypothesis was rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px"
)
} else {
div(
set_html_breaks(10),
paste0(sum(data$R), " null hypotheses were rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px;
.shiny-download-link{
width: 250px;
}
"
)
}
})
output$download <- downloadHandler(
filename = function() {
paste(file_string, Sys.Date(), ".csv", sep = "")
},
content = function(file) {
write_csv(algorithm_result[[1]], file)
}
)
}
return(count_server_function)
}
LONDcountServer <- make_count_server_function(LONDresult, "LOND-")
LONDcountServer
LONDcountServer <- make_count_server_function(algorithm_resul = LONDresult, file_string = "LOND-")
LONDcountServer
make_count_server_function <- function(algorithm_result, file_string) {
count_server_function <- function(input, output, session) {
ns <- session$ns
#toggle download button
observe({
toggle(id = "downloadbutton")
})
output$count <- renderUI({
data <- rlang::eval(algorithm_result)[[1]]
if(sum(data$R) == 1) {
div(
set_html_breaks(10),
paste0("1 null hypothesis was rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px"
)
} else {
div(
set_html_breaks(10),
paste0(sum(data$R), " null hypotheses were rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px;
.shiny-download-link{
width: 250px;
}
"
)
}
})
output$download <- downloadHandler(
filename = function() {
paste(file_string, Sys.Date(), ".csv", sep = "")
},
content = function(file) {
write_csv(algorithm_result[[1]], file)
}
)
}
return(count_server_function)
}
LONDcountServer <- make_count_server_function(algorithm_resul = LONDresult, file_string = "LOND-")
LONDcountServer
make_count_server_function <- function(algorithm_result, file_string) {
count_server_function <- function(input, output, session) {
ns <- session$ns
#toggle download button
observe({
toggle(id = "downloadbutton")
})
output$count <- renderUI({
data <- enexpr(algorithm_result)[[1]]
if(sum(data$R) == 1) {
div(
set_html_breaks(10),
paste0("1 null hypothesis was rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px"
)
} else {
div(
set_html_breaks(10),
paste0(sum(data$R), " null hypotheses were rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px;
.shiny-download-link{
width: 250px;
}
"
)
}
})
output$download <- downloadHandler(
filename = function() {
paste(file_string, Sys.Date(), ".csv", sep = "")
},
content = function(file) {
write_csv(algorithm_result[[1]], file)
}
)
}
return(count_server_function)
}
LONDcountServer <- make_count_server_function(algorithm_resul = LONDresult, file_string = "LOND-")
LONDcountServer
power1 <- function(exp) {
function(x) {
x ^ exp
}
}
square <- power1(2)
sqyare
square
LONDcountServer <- make_count_server_function(algorithm_resul = LONDresult, file_string = "LOND-")
env_print(LONDcountServer)
rlang::env_print(LONDcountServer)
make_count_server_function <- function(algorithm_result, file_string) {
force(algorithm_result)
force(file_string)
count_server_function <- function(input, output, session) {
ns <- session$ns
#toggle download button
observe({
toggle(id = "downloadbutton")
})
output$count <- renderUI({
data <- algorithm_result[[1]]
if(sum(data$R) == 1) {
div(
set_html_breaks(10),
paste0("1 null hypothesis was rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px"
)
} else {
div(
set_html_breaks(10),
paste0(sum(data$R), " null hypotheses were rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px;
.shiny-download-link{
width: 250px;
}
"
)
}
})
output$download <- downloadHandler(
filename = function() {
paste(file_string, Sys.Date(), ".csv", sep = "")
},
content = function(file) {
write_csv(algorithm_result[[1]], file)
}
)
}
return(count_server_function)
}
LONDcountServer <- make_count_server_function(algorithm_resul = LONDresult, file_string = "LOND-")
rlang::env_print(LONDcountServer)
LONDcountServer <- make_count_server_function(algorithm_result = LONDresult, file_string = "LOND-")
shiny::runApp()
View(ADDISUI)
#### FUNCTION FACTORY ####
make_count_server_function <- function(algorithm_result, file_string) {
force(file_string)
count_server_function <- function(input, output, session) {
ns <- session$ns
#toggle download button
observe({
toggle(id = "downloadbutton")
})
output$count <- renderUI({
data <- algorithm_result[[1]]
if(sum(data$R) == 1) {
div(
set_html_breaks(10),
paste0("1 null hypothesis was rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px"
)
} else {
div(
set_html_breaks(10),
paste0(sum(data$R), " null hypotheses were rejected. See full results by downloading below"),
set_html_breaks(2),
shinyWidgets::downloadBttn(
outputId = ns("download"),
label = "Download results",
style = "fill",
color = "primary",
size = "sm"
),
style = "text-align: center;
vertical-align: middle;
font-family: Poppins, sans-serif;
font-size: 18px;
.shiny-download-link{
width: 250px;
}
"
)
}
})
output$download <- downloadHandler(
filename = function() {
paste(file_string, Sys.Date(), ".csv", sep = "")
},
content = function(file) {
write_csv(algorithm_result[[1]], file)
}
)
}
return(count_server_function)
}
runApp()
LONDcountServer
rlang::env_print
rlang::env_print(LONDcountServer())
rlang::env_print(LONDcountServer
)
LONDcountServer
LONDcountServer %>% rlang::env_print
LONDcountServer %>% rlang::env_print()
